# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:

    working_directory: ~/code
      # specify the version you desire here
      docker:
      - image: circleci/android:api-28-alpha

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4



    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb



    steps:
    - checkout


    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
          - run:
              name: Download Dependencies
              command: ./gradlew androidDependencies
          - run:
              name: Run Unit Tests
              command: ./gradlew test
          - run:
              name: Run Linters
              command: ./gradlew check
          - run:
              name: Build
              command: ./gradlew assemble

    - save_cache:
        paths:
        - ~/.gradle
        key: v1-dependencies-{{ checksum "build.gradle" }}

  before_script:
  - export ANDROID_COMPILE_SDK=`egrep '^[[:blank:]]+compileSdkVersion'  app/build.gradle | awk '{print $2}'`
  - echo $ANDROID_SDK_TOOLS
  - echo $ANDROID_COMPILE_SDK
  - wget --quiet --output-document=/tmp/sdk-tools-linux.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip /tmp/sdk-tools-linux.zip -d .android
  - export ANDROID_HOME=$PWD/.android
  - export PATH=$PATH:$PWD/.android/platform-tools/
  - echo y | .android/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}"
  - chmod +x ./gradlew

  script:
  - ./gradlew assembleDebug





